source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(rawData)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(aggregatedPerInterval)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(rawData)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(rawData)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(rawData)
source('~/.active-rstudio-document', echo=TRUE)
View(rawData)
source('~/.active-rstudio-document', echo=TRUE)
View(rawData)
View(imputedData)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(imputedData)
View(filledData)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
weekdays(as.Date(filledData$date))
Sys.setlocale("LC_TIME","us")
weekdays(as.Date(filledData$date))
Sys.setlocale("LC_TIME","en_US")
weekdays(as.Date(filledData$date))
weekdays(as.Date(filledData$date)) == "Sunday"
weekdays(as.Date(filledData$date))
weekdays(as.Date(filledData$date)) in c("Saturday", "Sunday")
Sys.setlocale("LC_TIME","en_US")
weekdays <- weekdays(as.Date(filledData$date))
weekdays == "Saturday" || weekdays == "Sunday"
weekdays(weekdays == "Saturday" || weekdays == "Sunday")
weekdays(as.Date(filledData$date)) == "Saturday" || weekdays(as.Date(filledData$date)) == "Sunday"
weekdays(as.Date(filledData$date)) == "Saturday"
source('~/.active-rstudio-document', echo=TRUE)
View(filledData)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(filledData)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(filledData)
weekDayData <- filledData[filledData$weekday, ]
weekEndData <- filledData[!filledData$weekday, ]
View(weekDayData)
filledData$weekday
weekdays(as.Date(filledData$date))
weekdays(as.Date(filledData$date)) != "Saturday"
weekdays(as.Date(filledData$date)) != "Saturday"
weekdays(as.Date(filledData$date)) != "Sunday"
filledData$weekday
weekdays(as.Date(filledData$date)) != "Saturday"
weekdays(as.Date(filledData$date)) != "Sunday"
weekdays(as.Date(filledData$date)) != "Saturday" && weekdays(as.Date(filledData$date)) != "Sunday"
filledData$weekday
weekdays(as.Date(filledData$date)) != "Saturday"
weekdays(as.Date(filledData$date)) != "Sunday"
weekdays(as.Date(filledData$date)) != "Saturday" & weekdays(as.Date(filledData$date)) != "Sunday"
# Are there differences in activity patterns between weekdays and weekends?
> 1. Create a new factor variable in the dataset with two levels – “weekday” and “weekend” indicating whether a given date is a weekday or weekend day.
```{r results='hide'}
Sys.setlocale("LC_TIME","en_US")
filledData <- transform(
filledData,
weekday = (
weekdays(as.Date(filledData$date)) != "Saturday" &
weekdays(as.Date(filledData$date)) != "Sunday"))
```
> 2. Make a panel plot containing a time series plot (i.e. type = "l") of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all weekday days or weekend days (y-axis). See the README file in the GitHub repository to see an example of what this plot should look like using simulated data.
```{r}
weekDayData <- filledData[filledData$weekday, ]
weekEndData <- filledData[!filledData$weekday, ]
```
weekDayData <- filledData[filledData$weekday, ]
weekEndData <- filledData[!filledData$weekday, ]
par(mfrow=c(1,2))
aggregatedPerInterval <- aggregate(weekDayData$steps, list(weekDayData$interval), mean)
plot(x~Group.1, data = aggregatedPerInterval, type = "l", main = "Week Day", xlab = "5-minute interval", ylab = "Average number of steps")
aggregatedPerInterval <- aggregate(weekEndData$steps, list(weekEndData$interval), mean)
plot(x~Group.1, data = aggregatedPerInterval, type = "l", main = "Week End", xlab = "5-minute interval", ylab = "Average number of steps")
weekDayData <- filledData[filledData$weekday, ]
weekEndData <- filledData[!filledData$weekday, ]
par(mfrow=c(2,1))
aggregatedPerInterval <- aggregate(weekDayData$steps, list(weekDayData$interval), mean)
plot(x~Group.1, data = aggregatedPerInterval, type = "l", main = "Week Day", xlab = "5-minute interval", ylab = "Average number of steps")
aggregatedPerInterval <- aggregate(weekEndData$steps, list(weekEndData$interval), mean)
plot(x~Group.1, data = aggregatedPerInterval, type = "l", main = "Week End", xlab = "5-minute interval", ylab = "Average number of steps")
library(UsingR);
data(father.son)
x <- father.son$sheight
y <- father.son$fheight
plot(y~x)
result <- lm(y~x)
abline(result)
result$coefficients
library(UsingR);
data(father.son)
x <- father.son$sheight
y <- father.son$fheight
plot(y~x)
result <- lm(y~x)
abline(result)
result$coefficients
source('~/.active-rstudio-document', echo=TRUE)
---
title: "NOAA"
author: "Masaaki Inaba"
date: "2015年1月20日"
output: pdf_document
---
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r}
summary(cars)
```
You can also embed plots, for example:
```{r, echo=FALSE}
plot(cars)
```
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
data <- read.table(bzfile("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"))
data <- read.table(bzfile("https://d396qusza40orc.cloudfront.net/repdata_data_StormData.csv.bz2"))
data <- read.table(bzfile("./repdata_data_StormData.csv.bz2"))
data <- read.table(bzfile("repdata_data_StormData.csv.bz2"))
setwd("~/Coursera/ReproducibleResearch/PeerAssessment2")
data <- read.table(bzfile("repdata_data_StormData.csv.bz2"))
data <- read.table(bzfile("repdata_data_StormData.csv.bz2"))
data <- read.csv(bzfile("repdata_data_StormData.csv.bz2"))
if (data) {
"hoge"
}
if (hoge.lenght > 0) {
"hoge"
}
if (exists(hoge)) {
"hoge"
}
if (exists(data)) {
"hoge"
}
if (exists(noaaData)) {
"hoge"
}
if (!exists(noaaData)) {
"hoge"
}
if (!exists(data)) {
"hoge"
}
if (!exists("data")) {
"hoge"
}
if (exists("data")) {
"hoge"
}
if (!exists("data")) {
data <- read.csv(bzfile("repdata_data_StormData.csv.bz2"))
}
if (!exists("noaaData")) {
noaaData <- read.csv(bzfile("repdata_data_StormData.csv.bz2"))
}
temp <- data[:100]
temp <- data[1:100,]
View(temp)
View(noaaData)
colnames(data)
data[,29]
data[,25]
data[,26]
data[,7]
unique(data[,7])
eventType <- noaaData[, 8]
fatalities <- noaaData[, 23]
injuries <- noaaData[, 24]
populationHealth <- noaaData[c("EVTYPE", "FATALITIES", "INJURIES")]
View(populationHealth)
View(data)
if (!exists("noaaData")) {
noaaData <- read.csv(bzfile("repdata_data_StormData.csv.bz2"))
}
populationHealth <- noaaData[c("EVTYPE", "FATALITIES", "INJURIES")]
populationHealth2 <- aggregate(populationHealth$FATALITIES, list(populationHealth$EVTYPE), mean)
View(populationHealth2)
populationHealth2 <- aggregate(populationHealth$FATALITIES, populationHealth$INJURIES, list(populationHealth$EVTYPE), mean)
populationHealth2 <- aggregate(c(populationHealth$FATALITIES, populationHealth$INJURIES), list(populationHealth$EVTYPE), mean)
populationHealth2 <- aggregate(list(populationHealth$FATALITIES, populationHealth$INJURIES), list(populationHealth$EVTYPE), mean)
View(populationHealth2)
populationHealth2 <- aggregate(populationHealth, list(populationHealth$EVTYPE), mean)
View(populationHealth2)
View(populationHealth2)
View(populationHealth2)
populationHealth2 <- aggregate(populationHealth$FATALITIES, list(populationHealth$EVTYPE), mean)
View(populationHealth2)
populationHealth2 <- aggregate(populationHealth$FATALITIES, list(populationHealth$EVTYPE), mean)
View(populationHealth2)
populationHealth2 <- aggregate(
populationHealth$FATALITIES,
by = list(EVTYPE = populationHealth$EVTYPE),
FUN = mean)
View(populationHealth2)
populationHealth2 <- aggregate(
list(FATALITIES = populationHealth$FATALITIES),
by = list(EVTYPE = populationHealth$EVTYPE),
FUN = mean)
View(populationHealth2)
populationHealth2 <- aggregate(
list(FATALITIES = populationHealth$FATALITIES, INJURIES = populationHealth$INJURIES),
by = list(EVTYPE = populationHealth$EVTYPE),
FUN = mean)
View(populationHealth2)
if (!exists("noaaData")) {
noaaData <- read.csv(bzfile("repdata_data_StormData.csv.bz2"))
}
populationHealth <- noaaData[c("EVTYPE", "FATALITIES", "INJURIES")]
populationHealth <- aggregate(
list(FATALITIES = populationHealth$FATALITIES, INJURIES = populationHealth$INJURIES),
by = list(EVTYPE = populationHealth$EVTYPE),
FUN = mean)
rm(populationHealth)
rm(populationHealth2)
populationHealth <- noaaData[c("EVTYPE", "FATALITIES", "INJURIES")]
populationHealth <- aggregate(
list(FATALITIES = populationHealth$FATALITIES, INJURIES = populationHealth$INJURIES),
by = list(EVTYPE = populationHealth$EVTYPE),
FUN = mean)
health <- noaaData[c("EVTYPE", "FATALITIES", "INJURIES")]
health <- aggregate(
list(FATALITIES = health$FATALITIES, INJURIES = health$INJURIES),
by = list(EVTYPE = health$EVTYPE),
FUN = mean)
options(scipen=100)
health <- noaaData[c("EVTYPE", "FATALITIES", "INJURIES")]
health <- aggregate(
list(FATALITIES = health$FATALITIES, INJURIES = health$INJURIES),
by = list(EVTYPE = health$EVTYPE),
FUN = mean)
View(populationHealth)
health <- health[!(health$FATALITIES == 0 && health$INJURIES == 0),]
options(scipen=100)
health <- noaaData[c("EVTYPE", "FATALITIES", "INJURIES")]
health <- aggregate(
list(FATALITIES = health$FATALITIES, INJURIES = health$INJURIES),
by = list(EVTYPE = health$EVTYPE),
FUN = mean)
health <- health[!(health$FATALITIES == 0 & health$INJURIES == 0),]
View(health)
health <- noaaData[c("EVTYPE", "FATALITIES", "INJURIES")]
health <- aggregate(
list(FATALITIES = health$FATALITIES, INJURIES = health$INJURIES),
by = list(EVTYPE = health$EVTYPE),
FUN = mean)
health <- health[!(health$FATALITIES < 1 & health$INJURIES < 1),]
View(health)
transform(health, "FATALITIES+INJURIES" = health$FATALITIES + health$INJURIES)
health <- transform(health, "FATALITIES+INJURIES" = health$FATALITIES + health$INJURIES)
View(health)
options(scipen=100)
health <- noaaData[c("EVTYPE", "FATALITIES", "INJURIES")]
health <- aggregate(
list(FATALITIES = health$FATALITIES, INJURIES = health$INJURIES),
by = list(EVTYPE = health$EVTYPE),
FUN = mean)
health <- health[!(health$FATALITIES < 1 & health$INJURIES < 1),]
health <- transform(health, "FATALITIES plus INJURIES" = health$FATALITIES + health$INJURIES)
options(scipen=100)
health <- noaaData[c("EVTYPE", "FATALITIES", "INJURIES")]
health <- aggregate(
list(FATALITIES = health$FATALITIES, INJURIES = health$INJURIES),
by = list(EVTYPE = health$EVTYPE),
FUN = mean)
health <- health[!(health$FATALITIES < 1 & health$INJURIES < 1),]
health <- transform(health, list("FATALITIES plus INJURIES" = health$FATALITIES + health$INJURIES))
View(health)
health <- transform(health, "FATALITIESx3 plus INJURIES" = health$FATALITIES * 3 + health$INJURIES)
if (!exists("noaaData")) {
noaaData <- read.csv(bzfile("repdata_data_StormData.csv.bz2"))
}
options(scipen=100)
health <- noaaData[c("EVTYPE", "FATALITIES", "INJURIES")]
health <- aggregate(
list(FATALITIES = health$FATALITIES, INJURIES = health$INJURIES),
by = list(EVTYPE = health$EVTYPE),
FUN = mean)
health <- health[!(health$FATALITIES < 1 & health$INJURIES < 1),]
health <- transform(health, "FATALITIES plus INJURIES" = health$FATALITIES + health$INJURIES)
health <- transform(health, "FATALITIESx3 plus INJURIES" = health$FATALITIES * 3 + health$INJURIES)
View(health)
---
title: "NOAA"
author: "Masaaki Inaba"
date: "2015年1月20日"
output: pdf_document
---
> Across the United States, which types of events (as indicated in the EVTYPE variable) are most harmful with respect to population health?
```{r}
if (!exists("noaaData")) {
noaaData <- read.csv(bzfile("repdata_data_StormData.csv.bz2"))
}
options(scipen=100)
health <- noaaData[c("EVTYPE", "FATALITIES", "INJURIES")]
health <- aggregate(
list(FATALITIES = health$FATALITIES, INJURIES = health$INJURIES),
by = list(EVTYPE = health$EVTYPE),
FUN = mean)
health <- health[!(health$FATALITIES < 1 & health$INJURIES < 1),]
health <- transform(health, "FATALITIES plus INJURIES" = health$FATALITIES + health$INJURIES)
health <- transform(health, "FATALITIESx10 plus INJURIES" = health$FATALITIES * 10 + health$INJURIES)
```
View(health)
---
title: "NOAA"
author: "Masaaki Inaba"
date: "2015年1月20日"
output: pdf_document
---
> Across the United States, which types of events (as indicated in the EVTYPE variable) are most harmful with respect to population health?
```{r}
if (!exists("noaaData")) {
noaaData <- read.csv(bzfile("repdata_data_StormData.csv.bz2"))
}
options(scipen=100)
health <- noaaData[c("EVTYPE", "FATALITIES", "INJURIES")]
health <- aggregate(
list(FATALITIES = health$FATALITIES, INJURIES = health$INJURIES),
by = list(EVTYPE = health$EVTYPE),
FUN = mean)
health <- health[!(health$FATALITIES < 1 & health$INJURIES < 1),]
health <- transform(health, "FATALITIES plus INJURIES" = health$FATALITIES + health$INJURIES)
health <- transform(health, "FATALITIESx3 plus INJURIES" = health$FATALITIES * 3 + health$INJURIES)
```
---
title: "NOAA"
author: "Masaaki Inaba"
date: "2015年1月20日"
output: pdf_document
---
> Across the United States, which types of events (as indicated in the EVTYPE variable) are most harmful with respect to population health?
```{r}
if (!exists("noaaData")) {
noaaData <- read.csv(bzfile("repdata_data_StormData.csv.bz2"))
}
options(scipen=100)
health <- noaaData[c("EVTYPE", "FATALITIES", "INJURIES")]
health <- aggregate(
list(FATALITIES = health$FATALITIES, INJURIES = health$INJURIES),
by = list(EVTYPE = health$EVTYPE),
FUN = mean)
health <- health[!(health$FATALITIES < 1 & health$INJURIES < 1),]
health <- transform(health, "FATALITIES plus INJURIES" = health$FATALITIES + health$INJURIES)
health <- transform(health, "FATALITIESx3 plus INJURIES" = health$FATALITIES * 3 + health$INJURIES)
health[health$FATALITIES.plus.INJURIES = max(health$FATALITIES.plus.INJURIES)]
```
health[health$FATALITIES.plus.INJURIES == max(health$FATALITIES.plus.INJURIES)]
---
title: "NOAA"
author: "Masaaki Inaba"
date: "2015年1月20日"
output: pdf_document
---
> Across the United States, which types of events (as indicated in the EVTYPE variable) are most harmful with respect to population health?
```{r}
if (!exists("noaaData")) {
noaaData <- read.csv(bzfile("repdata_data_StormData.csv.bz2"))
}
options(scipen=100)
health <- noaaData[c("EVTYPE", "FATALITIES", "INJURIES")]
health <- aggregate(
list(FATALITIES = health$FATALITIES, INJURIES = health$INJURIES),
by = list(EVTYPE = health$EVTYPE),
FUN = mean)
health <- health[!(health$FATALITIES < 1 & health$INJURIES < 1),]
health <- transform(health, "FATALITIES plus INJURIES" = health$FATALITIES + health$INJURIES)
health <- transform(health, "FATALITIESx3 plus INJURIES" = health$FATALITIES * 3 + health$INJURIES)
health[health$FATALITIES.plus.INJURIES == max(health$FATALITIES.plus.INJURIES),]
```
---
title: "NOAA"
author: "Masaaki Inaba"
date: "2015年1月20日"
output: pdf_document
---
> Across the United States, which types of events (as indicated in the EVTYPE variable) are most harmful with respect to population health?
```{r}
if (!exists("noaaData")) {
noaaData <- read.csv(bzfile("repdata_data_StormData.csv.bz2"))
}
options(scipen=100)
health <- noaaData[c("EVTYPE", "FATALITIES", "INJURIES")]
health <- aggregate(
list(FATALITIES = health$FATALITIES, INJURIES = health$INJURIES),
by = list(EVTYPE = health$EVTYPE),
FUN = mean)
health <- health[!(health$FATALITIES < 1 & health$INJURIES < 1),]
health <- transform(health, "FATALITIES plus INJURIES" = health$FATALITIES + health$INJURIES)
health <- transform(health, "FATALITIESx3 plus INJURIES" = health$FATALITIES * 3 + health$INJURIES)
health[health$FATALITIES.plus.INJURIES == max(health$FATALITIES.plus.INJURIES),]
health[health$FATALITIESx3.plus.INJURIES == max(health$FATALITIESx3.plus.INJURIES),]
```
---
title: "NOAA"
author: "Masaaki Inaba"
date: "2015年1月20日"
output: pdf_document
---
> Across the United States, which types of events (as indicated in the EVTYPE variable) are most harmful with respect to population health?
### Load data.
```{r}
if (!exists("noaaData")) {
noaaData <- read.csv(bzfile("repdata_data_StormData.csv.bz2"))
}
```
### Extract columns related population health.
```{r}
health <- noaaData[c("EVTYPE", "FATALITIES", "INJURIES")]
```
```{r}
options(scipen=100)
health <- aggregate(
list(FATALITIES = health$FATALITIES, INJURIES = health$INJURIES),
by = list(EVTYPE = health$EVTYPE),
FUN = mean)
health <- health[!(health$FATALITIES < 1 & health$INJURIES < 1),]
health <- transform(health, "FATALITIES plus INJURIES" = health$FATALITIES + health$INJURIES)
health <- transform(health, "FATALITIESx3 plus INJURIES" = health$FATALITIES * 3 + health$INJURIES)
health[health$FATALITIES.plus.INJURIES == max(health$FATALITIES.plus.INJURIES),][, 2]
health[health$FATALITIESx3.plus.INJURIES == max(health$FATALITIESx3.plus.INJURIES),][, 2]
```
---
title: "NOAA"
author: "Masaaki Inaba"
date: "2015年1月20日"
output: pdf_document
---
> Across the United States, which types of events (as indicated in the EVTYPE variable) are most harmful with respect to population health?
### Load data.
```{r}
if (!exists("noaaData")) {
noaaData <- read.csv(bzfile("repdata_data_StormData.csv.bz2"))
}
```
### Extract columns related population health.
```{r}
health <- noaaData[c("EVTYPE", "FATALITIES", "INJURIES")]
```
```{r}
options(scipen=100)
health <- aggregate(
list(FATALITIES = health$FATALITIES, INJURIES = health$INJURIES),
by = list(EVTYPE = health$EVTYPE),
FUN = mean)
health <- health[!(health$FATALITIES < 1 & health$INJURIES < 1),]
health <- transform(health, "FATALITIES plus INJURIES" = health$FATALITIES + health$INJURIES)
health <- transform(health, "FATALITIESx3 plus INJURIES" = health$FATALITIES * 3 + health$INJURIES)
health[health$FATALITIES.plus.INJURIES == max(health$FATALITIES.plus.INJURIES),][, 1]
health[health$FATALITIESx3.plus.INJURIES == max(health$FATALITIESx3.plus.INJURIES),][, 1]
```
---
title: "NOAA"
author: "Masaaki Inaba"
date: "2015年1月20日"
output: pdf_document
---
> Across the United States, which types of events (as indicated in the EVTYPE variable) are most harmful with respect to population health?
### Load data.
```{r}
if (!exists("noaaData")) {
noaaData <- read.csv(bzfile("repdata_data_StormData.csv.bz2"))
}
```
### Extract columns related population health.
```{r}
health <- noaaData[c("EVTYPE", "FATALITIES", "INJURIES")]
```
```{r}
options(scipen=100)
health <- aggregate(
list(FATALITIES = health$FATALITIES, INJURIES = health$INJURIES),
by = list(EVTYPE = health$EVTYPE),
FUN = mean)
health <- health[!(health$FATALITIES < 1 & health$INJURIES < 1),]
health <- transform(health, "FATALITIES plus INJURIES" = health$FATALITIES + health$INJURIES)
health <- transform(health, "FATALITIESx3 plus INJURIES" = health$FATALITIES * 3 + health$INJURIES)
health[health$FATALITIES.plus.INJURIES == max(health$FATALITIES.plus.INJURIES),][, 1]
health[health$FATALITIESx3.plus.INJURIES == max(health$FATALITIESx3.plus.INJURIES),][, 1]
```
health[health$FATALITIES.plus.INJURIES == max(health$FATALITIES.plus.INJURIES),][,1]
health[health$FATALITIES.plus.INJURIES == max(health$FATALITIES.plus.INJURIES),]
health[health$FATALITIES.plus.INJURIES == max(health$FATALITIES.plus.INJURIES),]$EVTYPE
health[health$FATALITIESx3.plus.INJURIES == max(health$FATALITIESx3.plus.INJURIES),]$EVTYPE
